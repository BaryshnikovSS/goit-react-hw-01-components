{"version":3,"sources":["components/profile/Profile.module.css","components/statistics/Statistics.module.css","components/friendList/friendListItem/FriendListItem.module.css","components/friendList/FriendList.module.css","components/transactionHistory/TransactionHistory.module.css","components/profile/Profile.js","components/statistics/Statistics.js","components/friendList/friendListItem/FriendListItem.js","components/friendList/FriendList.js","components/transactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","user","name","avatar","location","tag","stats","className","css","profile","description","src","alt","label","followers","views","likes","Statistics","title","statistics","statistics_list","map","id","percentage","style","backgroundColor","Math","floor","random","toString","item","key","FriendListItem","friends","elem","isOnline","statusOn","statusOff","width","FriendList","friend_list","TransactionHistory","items","transaction_history","type","amount","currency","App","statistic","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18a4ae7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__p0DRL\",\"name\":\"Profile_name__1pj8r\",\"description\":\"Profile_description__2y8R5\",\"avatar\":\"Profile_avatar__1D2hQ\",\"stats\":\"Profile_stats__1PI_i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__UX1H4\",\"title\":\"Statistics_title__1buy-\",\"statistics_list\":\"Statistics_statistics_list__3FrtO\",\"item\":\"Statistics_item__39GAO\",\"label\":\"Statistics_label__1t7YY\",\"percentage\":\"Statistics_percentage__1aPTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1ogIw\",\"statusOn\":\"FriendListItem_statusOn__3C8nb\",\"statusOff\":\"FriendListItem_statusOff__2icjQ\",\"avatar\":\"FriendListItem_avatar__2ibV9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__25xYC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__Nxjp3\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from './Profile.module.css'\r\n\r\n// Компонент должен иметь один проп user, в котором он ожидает объект с информацией о пользователе:\r\n\r\n// name — имя пользователя\r\n// tag — тег в социальной сети без @\r\n// location — город и страна\r\n// avatar — url на изображение\r\n// stats — объект с информацией об активности\r\n// Компонент должен создавать DOM элемент следующей структуры.\r\n\r\nconst Profile = ({ user }) => {\r\n  const { name, avatar, location, tag, stats } = user;\r\n  return (\r\n    <>\r\n      <div className={css.profile}>\r\n        <div className={css.description}>\r\n          <img src={avatar} alt=\"user avatar\" className={css.avatar} />\r\n          <h2 className={css.name}>{name}</h2>\r\n          <p className=\"tag\">@{tag}</p>\r\n          <p className=\"location\">{location}</p>\r\n        </div>\r\n\r\n        <ul className={css.stats}>\r\n          <li>\r\n            <span className={css.label}>Followers</span>\r\n            <span className=\"quantity\">{stats.followers}</span>\r\n          </li>\r\n          <li>\r\n            <span className={css.label}>Views</span>\r\n            <span className=\"quantity\">{stats.views}</span>\r\n          </li>\r\n          <li>\r\n            <span className={css.label}>Likes</span>\r\n            <span className=\"quantity\">{stats.likes}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    location: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    // stats: PropTypes.string, // проверка типизации \r\n    stats: PropTypes.object\r\n    \r\n  })\r\n};\r\n","import React from \"react\";\r\nimport css from \"./Statistics.module.css\";\r\n\r\n// Компонент должен принимать два пропа title и stats, в которых указывается заголовок и объект статистики.\r\n\r\n// title - не обязателен, и если он не передан, не должна рендериться разметка заголовка <h2>.\r\n// stats - массив объектов содержащих информацию о элементе статистики. Может иметь произвольное кол-во элементов.\r\n// Цвет фона элемента статистики в оформлении можно пропустить, либо создать функцию для генерации случайного цвета.\r\n// Компонент должен создавать DOM элемент следующей структуры.\r\n\r\nconst getRandomColor = () => `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n\r\nconst Statistics = ({ stats, title }) => {\r\n  return (\r\n    <>\r\n      <section className={css.statistics}>\r\n        {title && <h2 className={css.title}>{title}</h2>}\r\n\r\n        <ul className={css.statistics_list}>\r\n          {stats.map(({ id, label, percentage }) => {\r\n            return (\r\n            <li style={{backgroundColor: getRandomColor()}} className={css.item} key={id}>\r\n                <span className={css.label}>{label}</span>\r\n                <span className={css.percentage}>{percentage}%</span>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport css from \"./FriendListItem.module.css\";\r\n\r\nconst FriendListItem = ({ friends }) => {\r\n\r\n  return (\r\n    <>\r\n      {friends.map(elem => {\r\n        const { avatar, name, isOnline, id } = elem;\r\n        return (\r\n          <li key={id} className={css.item}>\r\n            <span className={isOnline ? css.statusOn : css.statusOff}>\r\n              {isOnline}\r\n            </span>\r\n            <img className={css.avatar} src={avatar} alt={id} width=\"48\" />\r\n            <h3 className={css.name}>{name}</h3>\r\n          </li>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport FriendListItem from \"./friendListItem/FriendListItem\";\r\nimport css from './FriendList.module.css'\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={css.friend_list}>\r\n      <FriendListItem friends={friends} />\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FriendList;","import React from \"react\";\r\nimport css from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={css.transaction_history}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(elem => {\r\n          const { id, type, amount, currency } = elem;\r\n          return (\r\n            <tr key={id}>\r\n              <td>{type}</td>\r\n              <td>{amount}</td>\r\n              <td>{currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\nimport user from \"../user.json\";\nimport statistic from \"../statistical-data.json\";\nimport friends from '../friends.json';\nimport transactions from '../transactions.json'\nimport Profile from \"./profile/Profile\";\nimport Statistics from \"./statistics/Statistics.js\";\nimport FriendList from './friendList/FriendList';\nimport TransactionHistory from './transactionHistory/TransactionHistory'\n\nconst App = () => {\n  return (\n    <>\n      <Profile user={user} />\n      <Statistics stats={statistic} title={\"Upload stats\"} />\n      <FriendList friends={friends}/>\n      <TransactionHistory items={transactions}/>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}