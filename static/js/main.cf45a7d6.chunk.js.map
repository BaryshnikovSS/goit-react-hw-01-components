{"version":3,"sources":["components/friendList/friendListItem/FriendListItem.module.css","components/profile/Profile.js","components/statistics/Statistics.js","components/friendList/friendListItem/FriendListItem.js","components/friendList/FriendList.js","components/transactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","user","name","avatar","location","tag","stats","className","src","alt","followers","views","likes","Statistics","title","map","id","label","percentage","key","FriendListItem","friends","elem","isOnline","css","item","statusOn","statusOff","width","FriendList","TransactionHistory","items","type","amount","currency","App","statistic","transactions","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,SAAW,iCAAiC,UAAY,kCAAkC,KAAO,6BAA6B,OAAS,iC,qtGC0C1IC,EA/BC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACTC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,OAAQC,EAAyBH,EAAzBG,SAAUC,EAAeJ,EAAfI,IAAKC,EAAUL,EAAVK,MACrC,OACE,oCACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,eACb,yBAAKC,IAAKL,EAAQM,IAAI,cAAcF,UAAU,WAC9C,uBAAGA,UAAU,QAAQL,GACrB,uBAAGK,UAAU,OAAb,IAAqBF,GACrB,uBAAGE,UAAU,YAAYH,IAG3B,wBAAIG,UAAU,SACZ,4BACE,0BAAMA,UAAU,SAAhB,aACA,0BAAMA,UAAU,YAAYD,EAAMI,YAEpC,4BACE,0BAAMH,UAAU,SAAhB,SACA,0BAAMA,UAAU,YAAYD,EAAMK,QAEpC,4BACE,0BAAMJ,UAAU,SAAhB,SACA,0BAAMA,UAAU,YAAYD,EAAMM,YCL/BC,EArBI,SAAC,GAAsB,IAApBP,EAAmB,EAAnBA,MAAOQ,EAAY,EAAZA,MAC3B,OACE,oCACE,6BAASP,UAAU,cAChBO,GAAS,wBAAIP,UAAU,SAASO,GAEjC,wBAAIP,UAAU,mBACXD,EAAMS,KAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACvB,OACE,wBAAIX,UAAU,OAAOY,IAAKH,GACxB,0BAAMT,UAAU,SAASU,GACzB,0BAAMV,UAAU,cAAcW,EAA9B,a,gBCGDE,EApBQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAExB,OACE,oCACGA,EAAQN,KAAI,SAAAO,GAAS,IACZnB,EAA+BmB,EAA/BnB,OAAQD,EAAuBoB,EAAvBpB,KAAMqB,EAAiBD,EAAjBC,SAAUP,EAAOM,EAAPN,GAChC,OACE,wBAAIG,IAAKH,EAAIT,UAAWiB,IAAIC,MAC1B,0BAAMlB,UAAWgB,EAAWC,IAAIE,SAAWF,IAAIG,WAC5CJ,GAEH,yBAAKhB,UAAWiB,IAAIrB,OAAQK,IAAKL,EAAQM,IAAKO,EAAIY,MAAM,OACxD,uBAAGrB,UAAWiB,IAAItB,MAAOA,SCJtB2B,EARI,SAAC,GAAiB,IAAfR,EAAc,EAAdA,QACpB,OACE,wBAAId,UAAU,eACZ,kBAAC,EAAD,CAAgBc,QAASA,MCuBhBS,EA3BY,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAC3B,OACE,2BAAOxB,UAAU,uBACf,+BACE,4BACE,oCACA,sCACA,0CAIJ,+BACGwB,EAAMhB,KAAI,SAAAO,GAAS,IACVN,EAA+BM,EAA/BN,GAAIgB,EAA2BV,EAA3BU,KAAMC,EAAqBX,EAArBW,OAAQC,EAAaZ,EAAbY,SAC1B,OACI,wBAAIf,IAAKH,GACP,4BAAKgB,GACL,4BAAKC,GACL,4BAAKC,UCCNC,EAXH,WACV,OACE,oCACE,kBAAC,EAAD,CAASlC,KAAMA,IACf,kBAAC,EAAD,CAAYK,MAAO8B,EAAWtB,MAAO,iBACrC,kBAAC,EAAD,CAAYO,QAASA,IACrB,kBAAC,EAAD,CAAoBU,MAAOM,MCZjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cf45a7d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusOn\":\"FriendListItem_statusOn__3C8nb\",\"statusOff\":\"FriendListItem_statusOff__2icjQ\",\"name\":\"FriendListItem_name__2VL9T\",\"avatar\":\"FriendListItem_avatar__2ibV9\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Компонент должен иметь один проп user, в котором он ожидает объект с информацией о пользователе:\r\n\r\n// name — имя пользователя\r\n// tag — тег в социальной сети без @\r\n// location — город и страна\r\n// avatar — url на изображение\r\n// stats — объект с информацией об активности\r\n// Компонент должен создавать DOM элемент следующей структуры.\r\n\r\nconst Profile = ({ user }) => {\r\n  const { name, avatar, location, tag, stats } = user;\r\n  return (\r\n    <>\r\n      <div className=\"profile\">\r\n        <div className=\"description\">\r\n          <img src={avatar} alt=\"user avatar\" className=\"avatar\" />\r\n          <p className=\"name\">{name}</p>\r\n          <p className=\"tag\">@{tag}</p>\r\n          <p className=\"location\">{location}</p>\r\n        </div>\r\n\r\n        <ul className=\"stats\">\r\n          <li>\r\n            <span className=\"label\">Followers</span>\r\n            <span className=\"quantity\">{stats.followers}</span>\r\n          </li>\r\n          <li>\r\n            <span className=\"label\">Views</span>\r\n            <span className=\"quantity\">{stats.views}</span>\r\n          </li>\r\n          <li>\r\n            <span className=\"label\">Likes</span>\r\n            <span className=\"quantity\">{stats.likes}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    location: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    // stats: PropTypes.string, // проверка типизации \r\n    stats: PropTypes.object\r\n    \r\n  })\r\n};\r\n","import React from \"react\";\r\n\r\n// Компонент должен принимать два пропа title и stats, в которых указывается заголовок и объект статистики.\r\n\r\n// title - не обязателен, и если он не передан, не должна рендериться разметка заголовка <h2>.\r\n// stats - массив объектов содержащих информацию о элементе статистики. Может иметь произвольное кол-во элементов.\r\n// Цвет фона элемента статистики в оформлении можно пропустить, либо создать функцию для генерации случайного цвета.\r\n// Компонент должен создавать DOM элемент следующей структуры.\r\n\r\nconst Statistics = ({ stats, title }) => {\r\n  return (\r\n    <>\r\n      <section className=\"statistics\">\r\n        {title && <h2 className=\"title\">{title}</h2>}\r\n\r\n        <ul className=\"statistics-list\">\r\n          {stats.map(({ id, label, percentage }) => {\r\n            return (\r\n              <li className=\"item\" key={id}>\r\n                <span className=\"label\">{label}</span>\r\n                <span className=\"percentage\">{percentage}%</span>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport css from \"./FriendListItem.module.css\";\r\n\r\nconst FriendListItem = ({ friends }) => {\r\n\r\n  return (\r\n    <>\r\n      {friends.map(elem => {\r\n        const { avatar, name, isOnline, id } = elem;\r\n        return (\r\n          <li key={id} className={css.item}>\r\n            <span className={isOnline ? css.statusOn : css.statusOff}>\r\n              {isOnline}\r\n            </span>\r\n            <img className={css.avatar} src={avatar} alt={id} width=\"48\" />\r\n            <p className={css.name}>{name}</p>\r\n          </li>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport FriendListItem from \"./friendListItem/FriendListItem\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className=\"friend-list\">\r\n      <FriendListItem friends={friends} />\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\n\r\nconst TransactionHistory = ({items}) => {\r\n  return (\r\n    <table className=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(elem => {\r\n          const { id, type, amount, currency } = elem;\r\n          return (\r\n              <tr key={id}>\r\n                <td>{type}</td>\r\n                <td>{amount}</td>\r\n                <td>{currency}</td>\r\n              </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\nimport user from \"../user.json\";\nimport statistic from \"../statistical-data.json\";\nimport friends from '../friends.json';\nimport transactions from '../transactions.json'\nimport Profile from \"./profile/Profile\";\nimport Statistics from \"./statistics/Statistics.js\";\nimport FriendList from './friendList/FriendList';\nimport TransactionHistory from './transactionHistory/TransactionHistory'\n\nconst App = () => {\n  return (\n    <>\n      <Profile user={user} />\n      <Statistics stats={statistic} title={\"Upload stats\"} />\n      <FriendList friends={friends}/>\n      <TransactionHistory items={transactions}/>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}